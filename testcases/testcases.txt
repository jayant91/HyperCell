1. Config_all.txt, tries out all possible confuguration options.
2. Config_1.txt, uses mapping from Fabric_map_1.txt. Four Inputs all at same level, One Output. No back edges, All inputs from
   different banks.
3. Config_2.txt, uses mapping from Fabric_map_2.txt. Four Inputs at different levels, Two outputs at different level. One output 
   also feeds internal FU. NO back edge All inputs from different banks. Checks Prologue,Epilogue and Steady state. Multiple
   iterations
4. Config_3.txt, same as Config_2.txt, but checks epilogue spill also.
5. Config_4.txt, same as Config_2.txt, but the complete sequence is treated as prologue.
6. Config_5.txt uses mapping from Fabric_map_5.txt. 8 input ports takes inputs from 8 different banks. In each iteration, a single load 
   writes to all the eight banks, 4 stores.
7. Config_6.txt same mapping as Config_6.txt, but 7 banks written from single load, and the remaining port written by a different load.
8. Config_7.txt uses Fabric_map_7.txt. 10 input ports, all takes inputs from a single load.(Same bank to more than one port, Load request
   srites in 2 cycles.) 5 stores.
9. Config_8.txt same mapping as Config_7.txt. 10 input ports. Single load to 3 locations in each bank which goes to same port in three
   consecutive iterations. Another load for the remaining 2 ports. The first load in effect writes to 24 locations in 3 cycles. 
10.Config_9.txt uses Fabric_map_9.txt. 2 Inputs and One Output. 1 input from load. The output goes to store and local store and is used for        second input. 
11.Config_10.txt same mapping as Config_9.txt, only the Fabric input mapping is interchanged.
12.Config_11.txt uses Fabric_map_11.txt, 8 inputs, 4 outputs. 1 input from load. Other inputs uses Fabric Output data from Port 10. All 4 ports    are store and local store.
13.Config_12.txt same as Config_11.txt, but output port 10 is only for local store, not external store.
14.Config_13.txt uses Fabric_map_13.txt. 20 inputs and 10 outputs. Ports 10 and 11 are fed from load. Port 10 output is stored back in local      store at seperate indices for all 18 ports.(Fabric Output writing to multiple indices in same bank). The 9 remaining outputs to store. Load     and Fabric Outputs are to different banks.
15.Config_14.txt uses  Fabric_map_5.txt. 8 inputs, 4 outputs. 2 Loads for 4 inputs. 2 output feeds 2 each of the other 4 inputs. The remaining 2 outputs are store.(Mutiple Fabric Outputs to local storage, No bank sharing).
16.Config_15.txt is same as Config_14.txt , but tests epilogue and epilogue spill for fabric output sequencer
17.Config_16.txt same as Config_14.txt, but the two back edges try to write to the same bank, resulting in arbitration.
18.Config_17.txt uses Fabric_map_17.txt. This is a modified version of Config_16.txt with an additional pair of loads which also contents with     the back edges to write to the same bank.
19.Config_18.txt uses Fabric_map_18.txt. This uses four inputs and one output. This evaluates  the four point moving sum of an array.
20.Config_19.txt uses Fabric_map_5.txt. 8 input ports takes inputs from 8 different banks. Common Load for Bank 0 and 2 and another for other banks. First 5 loads are done continuously to Bank 0 and 2 which are enqueued for Ports 0 and 18.  Then loads are done for all banks and enq for all ports. This tests Input Port FIFO Full.
21. Config_20.txt uses Fabric_map_20.txt,  4 input ports are fed by a single load request. The outputs are fed back to 4 different local storage banks which feeds another set of 4 input ports. A single port outputs to store. This tests the Fab_Out_Loc_Str_Pipeline at full rate.
22. Config_21.txt uses Fabric_map_21.txt, A single load for eight inputs. These inputs feed 8 FUs, which gives out 8 outputs. These 8 outputs are writing back to a single bank in local storage which feeds a new set of 8 fabric inputs. This tests the Fabric Output arbitration for 8 ports.
23. Config_22.txt, Config_23.txt and Config_24.txt uses Fabric_map_22.txt. These tests shows writes to same local store  banks from different ports going out of order. Ports 0-3,8-11 does multiple writes to Bank 0. Port 5 has a single write which as per sequence is after all Port 0-3,8-11 writes. But because of the fair arbiter, Port 5 write is granted before writes from Ports 8-11.
In Config_22.txt, Port 5 writes to a completely independent index, so does not affect correctness. 
In Config_23.txt, Port 5 and Port 8 writes to same index, so instead of port 8 write, the port 5 write proceeds and affects correctness.
In Config_24.txt, although Port 5 and Port 8 writes are to same index, they are seperated by 5 control steps, so correctness is not affected.

